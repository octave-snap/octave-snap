name: Build and publish snap to snap store
on:
  push:
  pull_request:

jobs:
  build:
    name: Build snap
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build snap
        id: snapcraft
        uses: snapcore/action-build@v1
        with:
          snapcraft-channel: 5.x/stable

      - name: Archive snap artifact
        uses: actions/upload-artifact@v2
        with:
          name: snap
          path: ${{ steps.snapcraft.outputs.snap }}

  publish:
    name: Publish snap to snap store
    if: ${{ (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/stable') && github.repository_owner == 'octave-snap' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download snap artifact
        id: download
        uses: actions/download-artifact@v2
        with:
          name: snap

      - name: Expand the full file name of the snap
        id: expand
        run: echo "::set-output name=snap::$(ls ${{ steps.download.outputs.download-path }}/octave_*.snap)"

      - name: Compute the name of the snap release to publish
        id: name
        run: |
          commit="$(git rev-parse --short=12 $GITHUB_REF)"
          branch="$(echo $GITHUB_REF | sed 's|^refs/heads/||')"
          echo "::set-output name=release::edge/${branch}-${commit}"

      - name: Publish snap builds to a unique release name
        uses: snapcore/action-publish@v1
        with:
          store_login: ${{ secrets.STORE_LOGIN }}
          snap: ${{ steps.expand.outputs.snap }}
          release: ${{ steps.name.outputs.release }}

  test:
    name: Test snap
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download snap artifact
        id: download
        uses: actions/download-artifact@v2
        with:
          name: snap

      - name: Expand the full file name of the snap
        id: expand
        run: echo "::set-output name=snap::$(ls ${{ steps.download.outputs.download-path }}/octave_*.snap)"

      - name: Install snap
        run: sudo snap install --dangerous ${{ steps.expand.outputs.snap }}

      - name: Test running octave --version
        run: /snap/bin/octave --version

      - name: Test running octave --eval ver
        run: /snap/bin/octave --eval ver

      - name: Dump octave build configuration
        run: /snap/bin/octave --eval "disp (__octave_config_info__)"
